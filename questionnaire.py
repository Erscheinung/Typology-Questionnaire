while True:
    se = 0
    si = 0
    ne = 0
    ni = 0
    fe = 0
    fi = 0
    te = 0
    ti = 0

    raw_input("PERSONALITY TEST, Part I. Answer using a number from 0 to 3, depending on how much the adjective describes you. Press Enter to begin. ")

    fe += int(raw_input("\nEmotionally expressive? "))
    se += int(raw_input("Thrill-seeking? "))
    se += int(raw_input("Active? "))
    ti += int(raw_input("Good at problem-solving? "))
    fi += int(raw_input("Sensitive? "))
    fe += 3 - int(raw_input("Introverted? "))
    ti += int(raw_input("Good at troubleshooting? "))
    si += int(raw_input("Likes to relax? "))
    fi += int(raw_input("Principled? "))
    fi += int(raw_input("Political? "))
    se += 3 - int(raw_input("Passive? "))
    fe += int(raw_input("Compassionate? "))
    fi += 3 - int(raw_input("Unemotional? "))
    ti += int(raw_input("Logical? "))
    ni += 3 - int(raw_input("Improviser? "))
    te += int(raw_input("Resourceful? "))
    ni += int(raw_input("Philosophical? "))
    ti += int(raw_input("Rational? "))
    ne += int(raw_input("Has many ideas? "))
    ti += 3 - int(raw_input("Focused on emotion? "))
    fe += int(raw_input("Sociable? "))
    te += int(raw_input("Organized? "))
    ne += 3 - int(raw_input("Traditional? "))
    ne += 3 - int(raw_input("Detail-oriented? "))
    ne += int(raw_input("Easily inspired? "))
    fe += 3 - int(raw_input("Insensitive? "))
    se += int(raw_input("Focused on the present? "))
    si += 3 - int(raw_input("Unobservant? "))
    si += int(raw_input("Aware of pain? "))
    ne += int(raw_input("Eclectic? "))
    si += 3 - int(raw_input("Ignores discomfort? "))
    ti += int(raw_input("Analytical? "))
    ni += 3 - int(raw_input("Careless? "))
    fe += 3 - int(raw_input("Asocial? "))
    fe += int(raw_input("Has many friends? "))
    ni += 3 - int(raw_input("Impulsive? "))
    ni += int(raw_input("Insightful? "))
    te += 3 - int(raw_input("Unstructured? "))
    fi += int(raw_input("Intuitive? "))
    ti += 3 - int(raw_input("Irrational? "))
    si += 3 - int(raw_input("Ignores health? "))
    ne += int(raw_input("Creative? "))
    se += 3 - int(raw_input("Unathletic? "))
    si += int(raw_input("Nostalgic? "))
    ne += 3 - int(raw_input("Practical? "))
    te += int(raw_input("Overachieving? "))
    te += 3 - int(raw_input("Disorganized? "))
    te += int(raw_input("Efficient? "))
    si += int(raw_input("Attentive to detail? "))
    fe += int(raw_input("Nice? "))
    fi += int(raw_input("Emotional? "))
    si += int(raw_input("Aware of comfort? "))
    te += 3 - int(raw_input("Underachieving? "))
    se += int(raw_input("Aware? "))
    se += int(raw_input("Adventurous? "))
    ne += int(raw_input("Experimental? "))
    ti += 3 - int(raw_input("Illogical? "))
    ni += int(raw_input("Visionary? "))
    fi += 3 - int(raw_input("Has few values? "))
    fi += 3 - int(raw_input("Ignores emotions? "))
    te += int(raw_input("Career-oriented? "))
    ni += int(raw_input("Intellectual? "))
    se += 3 - int(raw_input("Daydreamer? "))
    ni += int(raw_input("Perceptive? "))

    raw_input("\nPERSONALITY TEST, Part II. Answer a number from 0 to 3, depending on which sentence describes you best. Press Enter to begin. ")

    print("\n0: Rarely aware of surroundings, and rarely good at living in the moment.")
    print("1: Not always aware of surroundings, and not always good at living in the moment.")
    print("2: Usually aware of surroundings, and good at living in the moment.")
    print("3: Almost always aware of surroundings, and very good at living in the moment.")
    se += 3 * int(raw_input("> "))

    print("\n0: Rarely aware of physical needs, and rarely has strong aesthetic taste.")
    print("1: Not always aware of physical needs, and doesn't always have strong aesthetic taste.")
    print("2: Usually aware of physical needs, and has strong aesthetic taste.")
    print("3: Almost always aware of physical needs, and has very strong aesthetic taste.")
    si += 3 * int(raw_input("> "))

    print("\n0: Rarely aware of logical connections and is rarely good at developing structures, classifications and methods.")
    print("1: Not always aware of logical connections and isn't always good at developing structures, classifications and methods.")
    print("2: Usually aware of logical connections and is good at developing structures, classifications and methods.")
    print("3: Almost always aware of logical connections and is very good at developing structures, classifications and methods.")
    ti += 3 * int(raw_input("> "))

    print("\n0: Rarely aware of ways to manipulate systems, and rarely good at succeeding within rules and frameworks.")
    print("1: Not always aware of ways to manipulate systems, and not always good at succeeding within rules and frameworks.")
    print("2: Usually aware of ways to manipulate systems, and good at succeeding within rules and frameworks.")
    print("3: Almost always aware of ways to manipulate systems, and very good at succeeding within rules and frameworks.")
    te += 3 * int(raw_input("> "))

    print("\n0: Rarely motivated by understanding and relation of old insights.")
    print("1: Sometimes motivated by understanding and relation of old insights.")
    print("2: Motivated by understanding and relation of old insights.")
    print("3: Main motivation is understanding and relation of old insights.")
    ni += 3 * int(raw_input("> "))

    print("\n0: Rarely aware of possibilities, and rarely good at generating ideas.")
    print("1: Not always aware of possibilities, and not always good at generating ideas.")
    print("2: Usually aware of possibilities, and good at generating ideas.")
    print("3: Almost always aware of possibilities, and very good at generating ideas.")
    ne += 3 * int(raw_input("> "))

    print("\n0: Rarely motivated by success within a framework or use of external systems.")
    print("1: Sometimes motivated by success within a framework and use of external systems.")
    print("2: Motivated by success within a framework and use of external systems.")
    print("3: Main motivation is success within a framework and successful use of external systems.")
    te += 3 * int(raw_input("> "))

    print("\n0: Rarely motivated by creative inspiration and discovery of new possibilities.")
    print("1: Sometimes motivated by creative inspiration and discovery of new possibilities.")
    print("2: Motivated by creative inspiration and discovery of new possibilities.")
    print("3: Main motivation is creative inspiration and discovery of new possibilities.")
    ne += 3 * int(raw_input("> "))

    print("\n0: Rarely aware of identity, and rarely good at following morals and values.")
    print("1: Not always aware of identity, and not always good at following morals and values.")
    print("2: Usually aware of identity, and good at following morals and values.")
    print("3: Almost always aware of identity, and very good at following morals and values.")
    fi += 3 * int(raw_input("> "))

    print("\n0: Rarely aware of emotional cues and rarely good at forming and maintaining relationships.")
    print("1: Not always aware of emotional cues and not always good at forming and maintaining relationships.")
    print("2: Usually aware of emotional cues and good at forming and maintaining relationships.")
    print("3: Almost always aware of emotional cues and very good at forming and maintaining relationships.")
    fe += 3 * int(raw_input("> "))

    print("\n0: Rarely motivated by physical engagement and discovery of new experiences.")
    print("1: Sometimes motivated by physical engagement and discovery of new experiences.")
    print("2: Motivated by physical engagement and discovery of new experiences.")
    print("3: Main motivation is physical engagement and discovery of new sensory experiences.")
    se += 3 * int(raw_input("> "))

    print("\n0: Rarely motivated by interpersonal connection or fulfillment of the emotions of others.")
    print("1: Sometimes motivated by interpersonal connection and fulfillment of the emotions of others.")
    print("2: Motivated by interpersonal connection and fulfillment of the emotions of others.")
    print("3: Main motivation is interpersonal connection and fulfillment of the emotions of others.")
    fe += 3 * int(raw_input("> "))

    print("\n0: Rarely motivated by application of logic or successful use of subjective methods.")
    print("1: Sometimes motivated by application of logic and successful use of subjective methods.")
    print("2: Motivated by application of logic and successful use of subjective methods.")
    print("3: Main motivation is application of logic and successful use of subjective methods.")
    ti += 3 * int(raw_input("> "))

    print("\n0: Rarely motivated by physical comfort and remembrance of old experiences.")
    print("1: Sometimes motivated by physical comfort and remembrance of old experiences.")
    print("2: Motivated by physical comfort and remembrance of old experiences.")
    print("3: Main motivation is physical comfort and remembrance of old experiences.")
    si += 3 * int(raw_input("> "))

    print("\n0: Rarely aware of deeper meaning, and rarely good at interpreting abstract ideas.")
    print("1: Not always aware of deeper meaning, and not always good at interpreting abstract ideas.")
    print("2: Usually aware of deeper meaning, and good at interpreting abstract ideas.")
    print("3: Almost always aware of deeper meaning, and very good at interpreting abstract ideas.")
    ni += 3 * int(raw_input("> "))

    print("\n0: Rarely motivated by internal emotion or adherence to own values.")
    print("1: Sometimes motivated by internal emotion and adherence to own values.")
    print("2: Motivated by internal emotion and adherence to own values.")
    print("3: Main motivation is internal emotion and adherence to own values.")
    fi += 3 * int(raw_input("> "))

    intp = ((ti * 4) + ((ne + si) * 3) + ni) - ((se * 3) + ((te + fi) * 2) + fe)
    entp = ((ne * 4) + ((ti + fe) * 3) + te) - ((fi * 3) + ((ni + se) * 2) + si)
    intj = ((ni * 4) + ((te + fi) * 3) + ti) - ((fe * 3) + ((ne + si) * 2) + se)
    entj = ((te * 4) + ((ni + se) * 3) + ne) - ((si * 3) + ((ti + fe) * 2) + fi)
    infp = ((fi * 4) + ((ne + si) * 3) + ni) - ((se * 3) + ((fe + ti) * 2) + te)
    enfp = ((ne * 4) + ((fi + te) * 3) + fe) - ((ti * 3) + ((ni + se) * 2) + si)
    infj = ((ni * 4) + ((fe + ti) * 3) + fi) - ((te * 3) + ((ne + si) * 2) + se)
    enfj = ((fe * 4) + ((ni + se) * 3) + ne) - ((si * 3) + ((fi + te) * 2) + ti)
    isfp = ((fi * 4) + ((se + ni) * 3) + si) - ((ne * 3) + ((fe + ti) * 2) + te)
    esfp = ((se * 4) + ((fi + te) * 3) + fe) - ((ti * 3) + ((si + ne) * 2) + ni)
    isfj = ((si * 4) + ((fe + ti) * 3) + fi) - ((te * 3) + ((se + ni) * 2) + ne)
    esfj = ((fe * 4) + ((si + ne) * 3) + se) - ((ni * 3) + ((fi + te) * 2) + ti)
    istp = ((ti * 4) + ((se + ni) * 3) + si) - ((ne * 3) + ((te + fi) * 2) + fe)
    estp = ((se * 4) + ((ti + fe) * 3) + te) - ((fi * 3) + ((si + ne) * 2) + ni)
    istj = ((si * 4) + ((te + fi) * 3) + ti) - ((fe * 3) + ((se + ni) * 2) + ne)
    estj = ((te * 4) + ((si + ne) * 3) + se) - ((ni * 3) + ((ti + fe) * 2) + fi)

    types = {'INTP': intp, 'ENTP': entp, 'INTJ': intj, 'ENTJ': entj, 'INFP': infp, 'ENFP': enfp, 'INFJ': infj, 'ENFJ': enfj,
             'ISFP': isfp, 'ESFP': esfp, 'ISFJ': isfj, 'ESFJ': esfj, 'ISTP': istp, 'ESTP': estp, 'ISTJ': istj, 'ESTJ': estj}

    typessort = []
    for key, value in sorted(types.iteritems(), key=lambda (k,v): (v,k), reverse=True):
        typessort += (key, value)

    print("\nRESULTS: Your most likely type is " + typessort[0] + ". You might also be " + typessort[2] + " or " + typessort[4] + ".\n")